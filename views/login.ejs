<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8" />
    <title>채팅</title>
    <link rel="stylesheet" href="/css/index.css" />
    <!-- <script src="/js/index.js"></script> -->
    <style>
      .hidden {
        display: none;
      }
    </style>
  </head>
  <body>
    <!-- <img src="http://127.0.0.1:4000/img/sample_img.png" alt="description" /> -->
    <div class="login-container">
      <form id="loginForm" class="loginForm">
        <input type="text" id="studentId" placeholder="인천대 포털 학번" required />
        <input
          type="password"
          id="password"
          placeholder="비밀번호"
          required
        />
        <button type="submit">로그인</button>
      </form>
    </div>
    <button onclick="logout()" class="logout hidden">로그아웃</button>
    <div class="booth_list"></div>
  </body>
</html>
<script>
document.getElementById("loginForm").addEventListener("submit", function (e) {
  e.preventDefault();
  var studentId = document.getElementById("studentId").value;
  var password = document.getElementById("password").value;

  fetch("http://localhost:4000/user/lms", {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
    },
    body: JSON.stringify({
      studentId: studentId,
      password: password,
    }),
  })
    .then((response) => response.json())
    .then((data) => {
      if (data.accessToken) {
        // 인증 토큰을 localStorage에 저장
        localStorage.setItem('authToken', data.accessToken);

        //새로운 토큰을 사용하여 추가 요청을 보냄
        fetch("http://localhost:4000/manage/list", {
          method: "GET",
          headers: {
            "Content-Type": "application/json",
            Authorization: `Bearer ${data.accessToken}`, // 여기서 data.accessToken은 앞서 정의된 토큰 변수입니다
          },
        })
        .then(response => {
          if (!response.ok) {
            throw new Error('Network response was not ok ' + response.statusText);
          }
          return response.json(); // 서버로부터 받은 JSON 응답을 파싱
        })
        .then(data => {
          console.log('Success:', data);
          // 여기에서 서버로부터 받은 데이터(data)를 가지고 필요한 작업을 수행합니다.
          // 예: 특정 DOM 요소를 업데이트
          document.getElementsByClassName("logout")[0].classList.remove("hidden");
          document.getElementsByClassName('login-container')[0].classList.add("hidden");
          document.getElementsByClassName("booth_list")[0].innerText = JSON.stringify(data, null, 2);
        })
        .catch(error => {
          console.error('Error:', error);
        });
      } else {
        // 로그인 실패 시 에러 메시지 표시
        alert(data.message || "로그인 실패");
      }
    })
    .catch((error) => console.error("Error:", error));
});

function logout() {
  const authToken = localStorage.getItem('authToken');
  fetch("http://localhost:4000/user/logout", {
    method: "GET",
    headers: {
      "Content-Type": "application/json",
      Authorization: `Bearer ${authToken}`,
    },
  })
  .then((response) => response.json())
  .then((data) => {
    if (data.success) {
      // 로그아웃 성공 후 특정 페이지로 리다이렉트
      window.location.href = 'http://localhost:4000/manage/';
    } else {
      // 로그아웃 실패 시 에러 메시지 표시
      alert(data.message || "로그아웃 실패");
    }
  })
  .catch((error) => console.error("Error:", error));
}
</script>
